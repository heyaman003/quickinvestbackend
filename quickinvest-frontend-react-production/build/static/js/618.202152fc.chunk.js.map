{"version":3,"file":"static/js/618.202152fc.chunk.js","mappings":"qKAEA,MAIA,EAJmBA,IAAqC,IAApC,SAAEC,EAAQ,MAAEC,EAAK,UAAEC,GAAWH,EAChD,OAAOI,EAAAA,EAAAA,KAAA,OAAKD,UAAS,qBAAAE,OAAuBF,GAAaD,MAAOA,EAAMD,SAAEA,GAAe,C,iICOzF,MA0FA,EA1FsBK,KACpB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC/BC,QAAS,MAGHH,KAAMG,IAAYC,EAAAA,EAAAA,MAE1BC,QAAQC,IAAI,CAAEH,YACdE,QAAQC,IAAW,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASA,SACrB,MAAOI,GAAcP,KAAMQ,EAAQ,MAAEC,EAAK,UAAEC,KAC1CC,EAAAA,EAAAA,OAEFC,EAAAA,EAAAA,YAAU,KAMA,IAADC,EALK,OAARL,QAAQ,IAARA,GAAAA,EAAUM,UACZC,EAAAA,EAAAA,GAAqB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAAS,WAChCb,EAAQ,CACNE,QAAS,OAGXY,EAAAA,EAAAA,GAAkB,OAALN,QAAK,IAALA,GAAW,QAANI,EAALJ,EAAOT,YAAI,IAAAa,OAAN,EAALA,EAAaC,QAAS,QACrC,GACC,CAACL,EAAOD,IAWX,OACEX,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sCAAqCF,UAClDsB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTtB,MAAO,CAAEuB,gBAAiB,QAC1BtB,UAAU,oCAAmCF,SAAA,EAE7CG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,yBAAwBF,UACrCG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,sBAGNG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sCAAqCF,UAClDsB,EAAAA,EAAAA,MAAA,QAAMG,SApBOC,UACnBC,EAAEC,iBACGtB,EAAKG,cAGFI,EAAWP,IAFjBe,EAAAA,EAAAA,GAAa,yBAA0B,QAGzC,EAcmCrB,SAAA,EAC3BG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,aAAYF,UACzBG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAASF,UACtBG,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,MAAM,MACNC,KAAK,OACLC,KAAK,UACLC,GAAG,QACHC,MAAO5B,EAAKG,QACZ0B,YAAY,sBACZC,SAAWT,GACTpB,EAAQ,IAAKD,EAAMG,QAASkB,EAAEU,OAAOH,QAEvChC,UAAU,cACVoC,gBAAgB,cAItBnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLR,KAAK,SACL7B,UAAU,aACVsC,WAAUxB,EAAyBhB,SAElCgB,EAAY,aAAe,YAE9Bb,EAAAA,EAAAA,KAAA,OACED,UAAU,2BACVD,MAAO,CAAEwC,QAAS,WAAYzC,UAE9BG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaF,UAC1BG,EAAAA,EAAAA,KAAA,UACEuC,MAAM,QACNC,IAAY,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASA,QACdmC,MAAM,OACNC,OAAO,OACPC,MAAM,0BAQd,C","sources":["components/Admin/CardLayout/CardLayout.js","containers/Admin.Container/Settings/PDFController/PDFController.js"],"sourcesContent":["import React from \"react\";\n\nconst CardLayout = ({ children, style, className }) => {\n  return <div className={`ss-trade_all_card ${className}`} style={style}>{children}</div>;\n};\n\nexport default CardLayout;","import React, { useEffect, useState } from \"react\";\nimport CardLayout from \"../../../../components/Admin/CardLayout/CardLayout\";\nimport Input from \"../../../../components/Admin/Input/Input\";\nimport Button from \"../../../../components/Admin/Button/Button\";\nimport {\n  useChangePdfLindMutation,\n  useGetPDFLinkQuery,\n} from \"../../../../services/Admin.Setting\";\nimport { Notification } from \"../../../../components/ToastNotification\";\n\nconst PDFController = () => {\n  const [data, setData] = useState({\n    pdfLink: \"\",\n  });\n  //   get image link\n  const { data: pdfLink } = useGetPDFLinkQuery();\n\n  console.log({ pdfLink });\n  console.log(pdfLink?.pdfLink);\n  const [addPdfLink, { data: response, error, isLoading }] =\n    useChangePdfLindMutation();\n\n  useEffect(() => {\n    if (response?.message) {\n      Notification(response?.message, \"success\");\n      setData({\n        pdfLink: \"\",\n      });\n    } else {\n      Notification(error?.data?.message, \"error\");\n    }\n  }, [error, response]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!data.pdfLink) {\n      Notification(\"All field are required\", \"error\");\n    } else {\n      await addPdfLink(data);\n    }\n  };\n\n  return (\n    <div className=\"ss-trade_supportticket_page_wrapper\">\n      <CardLayout\n        style={{ backgroundColor: \"#fff\" }}\n        className=\"ss-trade_supporttickett_form_card\"\n      >\n        <div className=\"ss-trade_section_title\">\n          <h2>PDF Controller</h2>\n          {/* <p>Whenever, </p> */}\n        </div>\n        <div className=\"ss-trade_supportticket_page_content\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form_group\">\n              <div className=\"purpose\">\n                <Input\n                  label=\"PDF\"\n                  type=\"text\"\n                  name=\"pdfLink\"\n                  id=\"proof\"\n                  value={data.pdfLink}\n                  placeholder=\"Enter your pdf link\"\n                  onChange={(e) =>\n                    setData({ ...data, pdfLink: e.target.value })\n                  }\n                  className=\"input_field\"\n                  inputGroupClass=\"left\"\n                />\n              </div>\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"submit_btn\"\n              disabled={isLoading ? true : false}\n            >\n              {isLoading ? \"Loading...\" : \"submit\"}\n            </Button>\n            <div\n              className=\"form_group preview_image\"\n              style={{ display: \"inherit\" }}\n            >\n              <div className=\"img_preview\">\n                <iframe\n                  title=\"Hello\"\n                  src={pdfLink?.pdfLink}\n                  width=\"100%\"\n                  height=\"100%\"\n                  allow=\"autoplay\"\n                />\n              </div>\n            </div>\n           \n          </form>\n        </div>\n      </CardLayout>\n    </div>\n  );\n};\n\nexport default PDFController;\n"],"names":["_ref","children","style","className","_jsx","concat","PDFController","data","setData","useState","pdfLink","useGetPDFLinkQuery","console","log","addPdfLink","response","error","isLoading","useChangePdfLindMutation","useEffect","_error$data","message","Notification","_jsxs","CardLayout","backgroundColor","onSubmit","async","e","preventDefault","Input","label","type","name","id","value","placeholder","onChange","target","inputGroupClass","Button","disabled","display","title","src","width","height","allow"],"sourceRoot":""}