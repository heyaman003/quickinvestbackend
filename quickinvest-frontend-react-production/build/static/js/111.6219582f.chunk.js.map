{"version":3,"file":"static/js/111.6219582f.chunk.js","mappings":"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","sources":["components/Admin/CardLayout/CardLayout.js","containers/Admin.Container/Settings/ChangePassWord/ChangePassWord.js"],"sourcesContent":["import React from \"react\";\n\nconst CardLayout = ({ children, style, className }) => {\n  return <div className={`ss-trade_all_card ${className}`} style={style}>{children}</div>;\n};\n\nexport default CardLayout;","import React, { useEffect, useState } from \"react\";\nimport { updatePasswordValidate } from \"../../../../components/Validate/Validate\";\nimport { Notification } from \"../../../../components/Admin/Notification/Notification\";\nimport CardLayout from \"../../../../components/Admin/CardLayout/CardLayout\";\nimport Input from \"../../../../components/Admin/Input/Input\";\nimport Button from \"../../../../components/Admin/Button/Button\";\nimport { useUpdatePasswordAdminMutation } from \"../../../../services/Admin.Setting\";\n\nconst ChangePassword = () => {\n  // const { data: userData } = useGetLoginUserQuery();\n\n  const [formErrors, setFormErrors] = useState({}); // form errors\n  const [data, setData] = useState({\n    current_password: \"\",\n    confirm_new_password: \"\",\n    new_password: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const handleChange = (e) => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value,\n    });\n  };\n  // error\n  useEffect(() => {\n    setFormErrors(updatePasswordValidate(data));\n  }, [data]);\n\n  // password update\n  const [editPassword, { error, data: passwordData, isLoading }] =\n    useUpdatePasswordAdminMutation();\n  console.log({ error });\n  console.log({ passwordData });\n  useEffect(() => {\n    if (passwordData?.message) {\n      Notification(passwordData?.message, \"success\");\n      setData({\n        current_password: \"\",\n        confirm_new_password: \"\",\n        new_password: \"\",\n      });\n    } else {\n      Notification(error?.data?.message, \"error\");\n    }\n  }, [error, passwordData]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (Object.keys(formErrors).length > 0) {\n      Notification(\"All conditions and fields are required\", \"error\");\n    } else {\n      console.log({ data });\n      await editPassword(data);\n    }\n  };\n  return (\n    <div className=\"ss-trade_updatepassword_page_wrapper\">\n      <CardLayout\n        style={{ backgroundColor: \"#fff\" }}\n        className=\"ss-trade_accountpassword_card\"\n      >\n        <div className=\"ss-trade_accountpassword_title\">\n          <h2>update password</h2>\n        </div>\n        <div className=\"ss-trade_accountpassword_field\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form_group\">\n              <Input\n                label=\"Current Password\"\n                type={`${showPassword ? \"text\" : \"password\"}`}\n                value={data.current_password}\n                name=\"current_password\"\n                placeholder=\"Enter your current password\"\n                onChange={handleChange}\n                inputGroupClass=\"left\"\n                isRequired={true}\n                error={formErrors.current_password}\n              />\n              <Input\n                label=\"\"\n                type=\"text\"\n                name=\"\"\n                placeholder=\"\"\n                className=\"input_field\"\n                inputGroupClass=\"right\"\n                isRequired={false}\n                disabled={true}\n                style={{ display: \"none\" }}\n              />\n            </div>\n            <div className=\"form_group\">\n              <Input\n                label=\"New Password\"\n                type={`${showPassword ? \"text\" : \"password\"}`}\n                value={data.new_password}\n                name=\"new_password\"\n                onChange={handleChange}\n                placeholder=\"Enter your new password\"\n                inputGroupClass=\"left\"\n                isRequired={true}\n                error={formErrors.new_password}\n              />\n              <Input\n                label=\"\"\n                type=\"text\"\n                name=\"\"\n                placeholder=\"\"\n                className=\"input_field\"\n                inputGroupClass=\"right\"\n                isRequired={false}\n                disabled={true}\n                style={{ display: \"none\" }}\n              />\n            </div>\n            <div className=\"form_group\">\n              <Input\n                label=\"Confirm New Password\"\n                type={`${showPassword ? \"text\" : \"password\"}`}\n                value={data.confirm_new_password}\n                name=\"confirm_new_password\"\n                placeholder=\"Enter your new password\"\n                onChange={handleChange}\n                inputGroupClass=\"left\"\n                isRequired={true}\n                error={formErrors.confirm_new_password}\n              />\n              <Input\n                label=\"\"\n                type=\"text\"\n                name=\"\"\n                placeholder=\"\"\n                className=\"input_field\"\n                inputGroupClass=\"right\"\n                isRequired={false}\n                disabled={true}\n                style={{ display: \"none\" }}\n              />\n            </div>\n            <div className=\"form-check form-check-label show_password form_group\">\n              <Input\n                type=\"checkbox\"\n                className=\"form-check-input form-check-label\"\n                value=\"showpassword\"\n                id=\"showpassword\"\n                onChange={() => setShowPassword(!showPassword)}\n              />\n              <label htmlFor=\"showpassword\" className=\"form-check-label\">\n                show Password\n              </label>\n            </div>\n\n            <div className=\"form_group\">\n              <Button type=\"submit\" className=\"submit_btn\" disabled={isLoading}>\n                {isLoading ? \"Loading...\" : \"update\"}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </CardLayout>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"names":["_ref","children","style","className","_jsx","concat","ChangePassword","formErrors","setFormErrors","useState","data","setData","current_password","confirm_new_password","new_password","showPassword","setShowPassword","handleChange","e","target","name","value","useEffect","updatePasswordValidate","editPassword","error","passwordData","isLoading","useUpdatePasswordAdminMutation","console","log","_error$data","message","Notification","_jsxs","CardLayout","backgroundColor","onSubmit","async","preventDefault","Object","keys","length","Input","label","type","placeholder","onChange","inputGroupClass","isRequired","disabled","display","id","htmlFor","Button"],"sourceRoot":""}