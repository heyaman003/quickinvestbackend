{"version":3,"file":"static/js/316.7823c4e7.chunk.js","mappings":"uTAUA,MA8JA,EA9JwBA,IAejB,IAfkB,QACvBC,EAAO,KACPC,EAAI,YACJC,EAAW,YACXC,EAAW,UACXC,EAAS,KACTC,EAAI,MACJC,EAAK,OACLC,EAAM,SACNC,EAAQ,KACRC,EAAI,YACJC,EAAW,eACXC,EAAc,UACdC,EAAS,mBACTC,GACDd,EACC,MAAO,CAAEe,IAAeC,EAAAA,EAAAA,OAEjBC,EAAaC,GAAkBC,EAAAA,SAAehB,GAMrD,OALAiB,EAAAA,EAAAA,YAAU,KACRL,EAAY,CAAEM,KAAM,IACpBR,EAAU,EAAE,GACX,CAACJ,EAAUC,EAAMH,KAGlBe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CACbrB,UAAS,GAAAsB,OAAKtB,GACduB,GAAI,CAAEC,UAAWzB,EAAa0B,MAAO,OAAQC,SAAU,QAASP,UAEhEF,EAAAA,EAAAA,MAACU,EAAAA,EAAK,CAACC,cAAY,EAAC,aAAW,eAAe5B,UAAU,gBAAemB,SAAA,EACrEC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAC7B,UAAU,oBAAmBmB,UACtCC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAAC9B,UAAU,mBAAkBmB,SACnCvB,EAAQmC,KAAI,CAACC,EAAQC,KACpBb,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CAERC,MAAOH,EAAOG,MACdC,MAAO,CAAEC,SAAUL,EAAOK,UAC1BrC,UAAU,oBAAmBmB,SAE5Ba,EAAOM,OALHL,EAAI,WAUjBb,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAACvC,UAAU,oBAAmBmB,SACjC,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,KAAI,CAACS,EAAKP,KACfb,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CACP9B,UAAU,uBACVyC,OAAK,EACLC,KAAK,WACLC,UAAW,EAAExB,SAGZvB,EAAQmC,KAAKC,IACZ,MAAMY,EAAQJ,EAAIR,EAAOa,IACzB,OACEzB,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACRlC,UAAU,wBAEVmC,MAAOH,EAAOG,MAAMhB,SAEnBa,EAAOc,QAA2B,kBAAVF,EACrBZ,EAAOc,OAAOF,GACdA,GALCZ,EAAOa,GAMF,KAbXZ,EAAI,cAsBlBxB,GACCQ,EAAAA,EAAAA,MAAA,OAAKmB,MAAO,CAAEW,QAAS,OAAQC,UAAW,QAAS7B,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAKmB,MAAO,CAAEW,QAAS,OAAQE,IAAK,OAAQC,WAAY,UAAW/B,SAAA,EACjEF,EAAAA,EAAAA,MAAA,OAAKmB,MAAO,CAAEW,QAAS,OAAQE,IAAK,OAAQ9B,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UACE+B,UAAgC,KAAlB,OAAJlD,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,aAChBC,QAASA,KACPlD,GAAUK,GAAW8C,GAASA,EAAO,IACrChD,GAAeI,EAAY,CAAEM,KAAMb,EAAS,GAAI,EAElDiC,MAAO,CACLmB,OAAQ,OACRC,QAAS,WACTC,SAAU,OACVC,aAAc,MACdC,WAAY,UACZC,MAAO,OACPC,OAAQ,WACR1C,SAAA,UAEJC,EAAAA,EAAAA,KAAA,UACE+B,UAAgC,KAAlB,OAAJlD,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,aAChBT,QAASA,KACPlD,GAAUK,GAAW8C,GAASA,EAAO,IACrChD,GAAeI,EAAY,CAAEM,KAAMb,EAAS,GAAI,EAElDiC,MAAO,CACLmB,OAAQ,OACRC,QAAS,WACTC,SAAU,OACVC,aAAc,MACdC,WAAY,UACZC,MAAO,OACPC,OAAQ,WACR1C,SAAA,aAGNF,EAAAA,EAAAA,MAAA,QACEmB,MAAO,CACLwB,MAAM,wBACNG,YAAa,OACbC,WAAY,OACZ7C,SAAA,CAEG,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMe,KAAK,WAAa,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMgE,kBAI/B7C,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,UACEiD,SAAWC,IACT5D,EAAe6D,OAAOD,EAAEE,OAAOzB,QAC/B/B,EAAeuD,OAAOD,EAAEE,OAAOzB,OAAO,EAExC0B,aAAY,GAAAhD,OAAKhB,GACjB8B,MAAO,CACLoB,QAAS,WACTC,SAAU,OACVO,WAAY,iBACZT,OAAQ,iBACRG,aAAc,MACda,QAAS,QACTpD,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,KAAIzB,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,KAAIzB,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,KAAIzB,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,MAAKzB,SAAC,iBAK1BC,EAAAA,EAAAA,KAACoD,EAAAA,EAAe,CACdC,mBAAoB,CAAC,GACrBC,UAAU,MACVC,WAA2BC,KAAhB,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,WAA8B,OAAJ5E,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,UAAY,EACzDjE,YAAaA,EACbZ,UAAU,8BAGb,ECjKDJ,EAAU,CACd,CAAEiD,GAAI,KAAMP,MAAO,MAAOD,SAAU,IACpC,CAAEQ,GAAI,SAAUP,MAAO,UAAWD,SAAU,KAC5C,CACEQ,GAAI,WACJP,MAAO,YACPD,SAAU,KAEZ,CACEQ,GAAI,cACJP,MAAO,eACPD,SAAU,IAEZ,CACEQ,GAAI,WACJP,MAAO,YACPD,SAAU,IAEZ,CACEQ,GAAI,oBACJP,MAAO,wBACPD,SAAU,IAGZ,CACEQ,GAAI,wBACJP,MAAO,oBACPD,SAAU,MAsEd,EAlEwB1C,IAajB,IAbkB,KACvBM,EAAI,YACJ6E,EAAW,aACXC,EAAY,UACZC,EAAS,WACTC,EAAU,KACV5E,EAAI,SACJD,EAAQ,OACRD,EAAM,YACNG,EAAW,eACXC,EAAc,UACdC,EAAS,mBACTC,GACDd,EACCuF,QAAQC,IAAI,UAAWlF,GAqBvB,MAAMJ,EAAW,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,KAAI,CAACqD,EAAGC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAnB9BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAa8B,OAnB9BN,IAqBa,OAAVZ,QAAU,IAAVA,OAAU,EAAVA,EAAYjE,MAAO,GAAKV,GAAe+E,EAAQ,GApBlDS,EAqBG,OAADV,QAAC,IAADA,GAAW,QAAVE,EAADF,EAAGgB,gBAAQ,IAAAd,OAAV,EAADA,EAAaQ,OApBfC,EAqBG,OAADX,QAAC,IAADA,GAAW,QAAVG,EAADH,EAAGgB,gBAAQ,IAAAb,OAAV,EAADA,EAAaQ,SApBfC,EAqBG,OAADZ,QAAC,IAADA,GAAW,QAAVI,EAADJ,EAAGgB,gBAAQ,IAAAZ,GAAa,QAAbC,EAAXD,EAAaa,mBAAW,IAAAZ,OAAvB,EAADA,EAA0BO,YApB5BC,EAqBG,OAADb,QAAC,IAADA,GAAW,QAAVM,EAADN,EAAGgB,gBAAQ,IAAAV,GAAa,QAAbC,EAAXD,EAAaW,mBAAW,IAAAV,GAAU,QAAVC,EAAxBD,EAA0BM,gBAAQ,IAAAL,OAAjC,EAADA,EAAoCU,KApBtCJ,EAqBG,OAADd,QAAC,IAADA,OAAC,EAADA,EAAGc,kBApBLC,EAqBG,OAADf,QAAC,IAADA,OAAC,EAADA,EAAGe,sBAnBE,CACLN,KACAC,SACAC,WACAC,cACAC,WACAC,oBACAC,wBAaD,IAEH,OACE/E,EAAAA,EAAAA,KAACmF,EAAe,CACd3G,QAASA,EACTC,KAAMA,EACNC,YAAaQ,EACbP,YAAa,IACbC,UAAU,eACVC,KAAMgF,EACND,UAAWA,EACX3E,KAAMA,EACND,SAAUA,EACVD,OAAQA,EACRK,UAAWA,EACXD,eAAgBA,EAChBD,YAAaA,EACbG,mBAAoBA,GACpB,E,eCnFN,MAwHA,EAxHmB+F,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXjG,EAAOkG,SAAwB,QAAhBT,EAACO,EAASG,cAAM,IAAAV,OAAA,EAAfA,EAAiBW,MAAM,KAAK,KAAO,GAClDjH,EAAQK,IAAa6G,EAAAA,EAAAA,UAASrG,IAC9BV,EAAaC,IAAkB8G,EAAAA,EAAAA,UAAS,KACxCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCf,EAAMoB,IAAWL,EAAAA,EAAAA,UAAS,KAC1BhH,EAAMsH,IAAWN,EAAAA,EAAAA,UAAS,IAC3BO,EAAc,CAClB5G,KAAMb,EACN0H,MAAOvH,EACPgG,OACAgB,aACAE,YAKFtC,QAAQC,IAAI,CAAEyC,gBACd,MAAM,KAAE3H,EAAI,mBAAE6H,IAAuBC,EAAAA,EAAAA,IAA2BH,IA4BzDI,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,IACnC,OAAVW,QAAU,IAAVA,GAAAA,EAAYE,MAAK,CAACC,EAAGC,KACnB,MAAMC,EAAa,IAAIC,KAAKH,EAAEI,WAI9B,OAHmB,IAAID,KAAKF,EAAEG,WAGVF,CAAU,IAGhC,MAAOG,EAAqBC,IAA0BpB,EAAAA,EAAAA,UAAS,CAAC,GAmBhE,OAlBAtG,EAAAA,EAAAA,YAAU,KACR,GAAuB,OAAnByH,QAAmB,IAAnBA,GAAAA,EAAqBE,MAA2B,OAAnBF,QAAmB,IAAnBA,GAAAA,EAAqBG,MAAO,CAAC,IAADC,EAC3D,MAAMC,EAAc,OAAJ5I,QAAI,IAAJA,GAAU,QAAN2I,EAAJ3I,EAAMA,YAAI,IAAA2I,OAAN,EAAJA,EAAYE,KAAKC,QAAO,CAAC3D,EAAGnD,KAAC,IAAA+G,EAAA,OAC1C,OAAD5D,QAAC,IAADA,GAAc,QAAb4D,EAAD5D,EAAG6D,mBAAW,IAAAD,OAAb,EAADA,EAAgBE,SAA4B,OAAnBV,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBE,KAAK,IAE/CS,EAAa,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASE,QAAQ3D,IAAC,IAAAgE,EAAA,OAC3B,OAADhE,QAAC,IAADA,GAAc,QAAbgE,EAADhE,EAAG6D,mBAAW,IAAAG,OAAb,EAADA,EAAgBF,SAA4B,OAAnBV,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBG,MAAM,IAEtDV,EAAckB,EAChB,IACC,CAAoB,OAAnBX,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBE,KAAyB,OAAnBF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBG,SACpD5H,EAAAA,EAAAA,YAAU,KAAO,IAADsI,EACd,MAAMC,EAAa,IAAIhB,KAAKjI,GAAMkJ,eAC5BC,EAAmB,OAAJvJ,QAAI,IAAJA,GAAU,QAANoJ,EAAJpJ,EAAMA,YAAI,IAAAoJ,OAAN,EAAJA,EAAYP,KAAKC,QACnC3D,IAAO,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG6D,cAAeK,IAE3BrB,EAAcuB,EAAa,GAC1B,CAACnJ,IACAyH,GACK1G,EAAAA,EAAAA,KAACqI,EAAAA,EAAO,KAGfrI,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACsI,EAAAA,EAAkB,CACjBC,iBAAiB,qBACjBC,UAAW,CAAEC,gBAAiB,QAC9BC,kBAAiB,gBAAAxI,OAAuC,QAAvCoF,EAAsB,OAAJzG,QAAI,IAAJA,GAAU,QAAN0G,EAAJ1G,EAAMA,YAAI,IAAA0G,OAAN,EAAJA,EAAY9B,iBAAS,IAAA6B,EAAAA,EAAI,EAAC,KAC7DzG,KAAU,OAAJA,QAAI,IAAJA,GAAU,QAAN2G,EAAJ3G,EAAMA,YAAI,IAAA2G,OAAN,EAAJA,EAAYkC,KAClBb,cAAeA,EACfN,QAASA,EACTc,uBAAwBA,EACxBD,oBAAqBA,EAGrBjB,cAAeA,EACfD,WAAYA,EACZjH,KAAMA,EACN0J,eAAoB,OAAJ9J,QAAI,IAAJA,GAAU,QAAN4G,EAAJ5G,EAAMA,YAAI,IAAA4G,OAAN,EAAJA,EAAYmD,YAC5BC,MAAM,EACNvC,QAASA,EACTD,YAAaA,EACbyC,OACE9I,EAAAA,EAAAA,KAAC+I,EAAe,CACdlK,KAAU,OAAJA,QAAI,IAAJA,GAAU,QAAN6G,EAAJ7G,EAAMA,YAAI,IAAA6G,OAAN,EAAJA,EAAYgC,KAGlB7D,WAAgB,OAAJhF,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAClBI,KAAMA,EACND,SAAUkH,EACVtC,UAAe,OAAJ/E,QAAI,IAAJA,GAAU,QAAN8G,EAAJ9G,EAAMA,YAAI,IAAA8G,OAAN,EAAJA,EAAYlC,UACvB1E,OAAQA,EACRG,YAAaA,EACbE,UAAWA,EACXD,eAAgBA,EAChBE,oBAAoB,OAIzB,C","sources":["components/Admin/TablePagination/index.js","containers/Admin.Container/Members/Tables/BlockedMemberTable/RankStatusTable.js","containers/Admin.Container/Members/RankStatus/RankStatus.js"],"sourcesContent":["import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport React, { useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst PaginationTable = ({\n  columns,\n  rows,\n  perPageShow,\n  tableHeight,\n  className,\n  data,\n  level,\n  pageNo,\n  searchId,\n  date,\n  pagePerShow,\n  setPagePerShow,\n  setPageNo,\n  isCustomPagination,\n}) => {\n  const [, setPageShow] = useSearchParams();\n\n  const [rowsPerPage, setRowsPerPage] = React.useState(perPageShow);\n  useEffect(() => {\n    setPageShow({ page: 1 });\n    setPageNo(1);\n  }, [searchId, date, level]);\n\n  return (\n    <>\n      <TableContainer\n        className={`${className}`}\n        sx={{ maxHeight: tableHeight, width: \"100%\", maxWidth: \"100%\" }}\n      >\n        <Table stickyHeader aria-label=\"sticky table\" className=\"materialTable\">\n          <TableHead className=\"materialTableHead\">\n            <TableRow className=\"materialTableRow\">\n              {columns.map((column, i) => (\n                <TableCell\n                  key={i + 50}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  className=\"materialTableCell\"\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody className=\"materialTableBody\">\n            {rows?.map((row, i) => (\n              <TableRow\n                className=\"materialTableBodyRow\"\n                hover\n                role=\"checkbox\"\n                tabIndex={-1}\n                key={i + 100}\n              >\n                {columns.map((column) => {\n                  const value = row[column.id];\n                  return (\n                    <TableCell\n                      className=\"materialTableBodyCell\"\n                      key={column.id}\n                      align={column.align}\n                    >\n                      {column.format && typeof value === \"number\"\n                        ? column.format(value)\n                        : value}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {isCustomPagination ? (\n        <div style={{ display: \"flex\", marginTop: \"20px\" }}>\n          <div style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}>\n            <div style={{ display: \"flex\", gap: \"5px\" }}>\n              <button\n                disabled={data?.hasPrevPage === false}\n                onClick={() => {\n                  pageNo && setPageNo((prev) => prev - 1);\n                  pagePerShow && setPageShow({ page: pageNo - 1 });\n                }}\n                style={{\n                  border: \"none\",\n                  padding: \"5px 10px\",\n                  fontSize: \"15px\",\n                  borderRadius: \"5px\",\n                  background: \"#1a73e8\",\n                  color: \"#fff\",\n                  cursor: \"pointer\",\n                }}\n              >{`Prev`}</button>\n              <button\n                disabled={data?.hasNextPage === false}\n                onClick={() => {\n                  pageNo && setPageNo((prev) => prev + 1);\n                  pagePerShow && setPageShow({ page: pageNo + 1 });\n                }}\n                style={{\n                  border: \"none\",\n                  padding: \"5px 10px\",\n                  fontSize: \"15px\",\n                  borderRadius: \"5px\",\n                  background: \"#1a73e8\",\n                  color: \"#fff\",\n                  cursor: \"pointer\",\n                }}\n              >{`Next`}</button>\n            </div>\n            <span\n              style={{\n                color: `--var(--text-p-black)`,\n                marginRight: \"10px\",\n                fontWeight: \"500\",\n              }}\n            >\n              {data?.page} out of {data?.totalPages}\n            </span>\n          </div>\n\n          <div>\n            <select\n              onChange={(e) => {\n                setPagePerShow(Number(e.target.value));\n                setRowsPerPage(Number(e.target.value));\n              }}\n              defaultValue={`${pagePerShow}`}\n              style={{\n                padding: \"6px 10px\",\n                fontSize: \"13px\",\n                fontWeight: \"600 !important\",\n                border: \"1px solid gray\",\n                borderRadius: \"5px\",\n                outline: \"none\",\n              }}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </select>\n          </div>\n        </div>\n      ) : (\n        <TablePagination\n          rowsPerPageOptions={[5]}\n          component=\"div\"\n          count={data?.totalDocs !== undefined ? data?.totalDocs : 0}\n          rowsPerPage={rowsPerPage}\n          className=\"materialTablePagination\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default PaginationTable;\n","import React from \"react\";\nimport PaginationTable from \"../../../../../components/Admin/TablePagination\";\n\nconst columns = [\n  { id: \"sn\", label: \"S.N\", minWidth: 20 },\n  { id: \"userId\", label: \"User ID\", minWidth: 100 },\n  {\n    id: \"fullName\",\n    label: \"Full Name\",\n    minWidth: 120,\n  },\n  {\n    id: \"currentRank\",\n    label: \"Current Rank\",\n    minWidth: 80,\n  },\n  {\n    id: \"nextRank\",\n    label: \"Next Rank\",\n    minWidth: 80,\n  },\n  {\n    id: \"totalTeamBusiness\",\n    label: \"Current Team Business\",\n    minWidth: 80,\n  },\n\n  {\n    id: \"totalRequiredBusiness\",\n    label: \"Required Business\",\n    minWidth: 120,\n  },\n];\n\nconst RankStatusTable = ({\n  data,\n  editHandler,\n  blockHandler,\n  totalData,\n  totalItems,\n  date,\n  searchId,\n  pageNo,\n  pagePerShow,\n  setPagePerShow,\n  setPageNo,\n  isCustomPagination,\n}) => {\n  console.log(\"my data\", data);\n  function createData(\n    sn,\n    userId,\n    fullName,\n    currentRank,\n    nextRank,\n    totalTeamBusiness,\n    totalRequiredBusiness\n  ) {\n    return {\n      sn,\n      userId,\n      fullName,\n      currentRank,\n      nextRank,\n      totalTeamBusiness,\n      totalRequiredBusiness,\n    };\n  }\n\n  const rows = data?.map((d, index) =>\n    createData(\n      (totalItems?.page - 1) * pagePerShow + (index + 1),\n      d?.userInfo?.userId,\n      d?.userInfo?.fullName,\n      d?.userInfo?.royaltyRank?.currentRank,\n      d?.userInfo?.royaltyRank?.nextRank?.rank,\n      d?.totalTeamBusiness,\n      d?.totalRequiredBusiness\n    )\n  );\n  return (\n    <PaginationTable\n      columns={columns}\n      rows={rows}\n      perPageShow={pagePerShow}\n      tableHeight={640}\n      className=\"common_table\"\n      data={totalItems}\n      totalData={totalData}\n      date={date}\n      searchId={searchId}\n      pageNo={pageNo}\n      setPageNo={setPageNo}\n      setPagePerShow={setPagePerShow}\n      pagePerShow={pagePerShow}\n      isCustomPagination={isCustomPagination}\n    />\n  );\n};\n\nexport default RankStatusTable;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport BlockedMemberTable from \"../Tables/BlockedMemberTable/BlockedMemberTable\";\nimport SectionCommonTable from \"../../../../components/Admin/SectionCommonTable/SectionCommonTable\";\nimport Loading from \"../../../../components/Admin/Loading/Loading\";\nimport {\n  useGetBlockedMemberAdminQuery,\n  useGetRankStatusAdminQuery,\n} from \"../../../../services/Admin.AllUser\";\nimport RankStatusTable from \"../Tables/BlockedMemberTable/RankStatusTable\";\nimport { useLocation } from \"react-router-dom\";\n\nconst RankStatus = () => {\n  const location = useLocation();\n  const page = parseInt(location.search?.split(\"=\")[1]) || 1;\n  const [pageNo, setPageNo] = useState(page);\n  const [pagePerShow, setPagePerShow] = useState(10);\n  const [searchById, setSearchById] = useState(\"\");\n  const [rankType, setRankType] = useState(\"\");\n  const [rank, setRank] = useState(\"\");\n  const [date, setDate] = useState([]);\n  const filterQuery = {\n    page: pageNo,\n    limit: pagePerShow,\n    rank,\n    searchById,\n    rankType,\n    // startDate: new Date(date[0]).toLocaleDateString() || \"\",\n    // endDate: new Date(date[1]).toLocaleDateString() || \"\",\n  };\n  // get block user\n  console.log({ filterQuery });\n  const { data, isLoadingBlockUser } = useGetRankStatusAdminQuery(filterQuery);\n\n  // unblock member\n  // const [blockMember, { data: blockData, error: blockError }] =\n  //   useEditUserStatusMutation();\n  // useEffect(() => {\n  //   if (blockData?.message) {\n  //     Notification(blockData?.message, \"success\");\n  //   } else {\n  //     Notification(blockError?.data?.message, \"error\");\n  //   }\n  // }, [blockError, blockData]);\n  // const blockHandler = async (body) => {\n  //   await blockMember(body);\n  // };\n  // delete member\n  // const [deleteMember, { data: deleteData, error: deleteError }] =\n  //   useDeleteUserListMutation();\n  // useEffect(() => {\n  //   if (deleteData?.message) {\n  //     Notification(deleteData?.message, \"success\");\n  //   } else {\n  //     Notification(deleteError?.data?.message, \"error\");\n  //   }\n  // }, [deleteError, deleteData]);\n  // const deleteHandler = async (body) => {\n  //   await deleteMember(body);\n  // };\n  const [filterData, setFilterData] = useState([]);\n  filterData?.sort((a, b) => {\n    const createdAtA = new Date(a.createdAt);\n    const createdAtB = new Date(b.createdAt);\n\n    // Compare createdAt dates in descending order\n    return createdAtB - createdAtA;\n  });\n  // const [date, setDate] = useState(\"\");\n  const [monthWiseFilterData, setMonthWiseFilterData] = useState({});\n  useEffect(() => {\n    if (monthWiseFilterData?.year && monthWiseFilterData?.month) {\n      const filtRes = data?.data?.docs.filter((d, i) =>\n        d?.joiningDate?.includes(monthWiseFilterData?.year)\n      );\n      const res = filtRes?.filter((d) =>\n        d?.joiningDate?.includes(monthWiseFilterData?.month)\n      );\n      setFilterData(res);\n    }\n  }, [monthWiseFilterData?.year, monthWiseFilterData?.month]);\n  useEffect(() => {\n    const filterDate = new Date(date).toDateString();\n    const filterResult = data?.data?.docs.filter(\n      (d) => d?.joiningDate == filterDate\n    );\n    setFilterData(filterResult);\n  }, [date]);\n  if (isLoadingBlockUser) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <SectionCommonTable\n        wrapperClassName=\"activemember_table\"\n        cardStyle={{ backgroundColor: \"#fff\" }}\n        sectionTableTitle={`Rank Status (${data?.data?.totalDocs ?? 0})`}\n        data={data?.data?.docs}\n        setFilterData={setFilterData}\n        setDate={setDate}\n        setMonthWiseFilterData={setMonthWiseFilterData}\n        monthWiseFilterData={monthWiseFilterData}\n        // data={data?.data?.data}\n        // setDate={setDate}\n        setSearchById={setSearchById}\n        searchById={searchById}\n        date={date}\n        countContainer={data?.data?.totalAmount}\n        Rank={true}\n        setRank={setRank}\n        setRankType={setRankType}\n        table={\n          <RankStatusTable\n            data={data?.data?.docs}\n            // blockHandler={blockHandler}\n            // deleteHandler={deleteHandler}\n            totalItems={data?.data}\n            date={date}\n            searchId={searchById}\n            totalData={data?.data?.totalDocs}\n            pageNo={pageNo}\n            pagePerShow={pagePerShow}\n            setPageNo={setPageNo}\n            setPagePerShow={setPagePerShow}\n            isCustomPagination={true}\n          />\n        }\n      />\n    </>\n  );\n};\n\nexport default RankStatus;\n"],"names":["_ref","columns","rows","perPageShow","tableHeight","className","data","level","pageNo","searchId","date","pagePerShow","setPagePerShow","setPageNo","isCustomPagination","setPageShow","useSearchParams","rowsPerPage","setRowsPerPage","React","useEffect","page","_jsxs","_Fragment","children","_jsx","TableContainer","concat","sx","maxHeight","width","maxWidth","Table","stickyHeader","TableHead","TableRow","map","column","i","TableCell","align","style","minWidth","label","TableBody","row","hover","role","tabIndex","value","id","format","display","marginTop","gap","alignItems","disabled","hasPrevPage","onClick","prev","border","padding","fontSize","borderRadius","background","color","cursor","hasNextPage","marginRight","fontWeight","totalPages","onChange","e","Number","target","defaultValue","outline","TablePagination","rowsPerPageOptions","component","count","undefined","totalDocs","editHandler","blockHandler","totalData","totalItems","console","log","d","index","_d$userInfo","_d$userInfo2","_d$userInfo3","_d$userInfo3$royaltyR","_d$userInfo4","_d$userInfo4$royaltyR","_d$userInfo4$royaltyR2","sn","userId","fullName","currentRank","nextRank","totalTeamBusiness","totalRequiredBusiness","userInfo","royaltyRank","rank","PaginationTable","RankStatus","_location$search","_data$data$totalDocs","_data$data3","_data$data4","_data$data5","_data$data6","_data$data7","location","useLocation","parseInt","search","split","useState","searchById","setSearchById","rankType","setRankType","setRank","setDate","filterQuery","limit","isLoadingBlockUser","useGetRankStatusAdminQuery","filterData","setFilterData","sort","a","b","createdAtA","Date","createdAt","monthWiseFilterData","setMonthWiseFilterData","year","month","_data$data","filtRes","docs","filter","_d$joiningDate","joiningDate","includes","res","_d$joiningDate2","_data$data2","filterDate","toDateString","filterResult","Loading","SectionCommonTable","wrapperClassName","cardStyle","backgroundColor","sectionTableTitle","countContainer","totalAmount","Rank","table","RankStatusTable"],"sourceRoot":""}