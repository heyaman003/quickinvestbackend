{"version":3,"file":"static/js/936.599e380b.chunk.js","mappings":"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","sources":["components/Admin/CardLayout/CardLayout.js","components/Admin/Modal/Modal.js","components/Admin/LevelTeamFilter/LevelTeamFilter.js","Config/UserRole.js","utils/RankButton.js","components/Admin/SectionCommonTable/SectionCommonTable.js","components/TransactionModal/TransactionModal.js","containers/Admin.Container/Earning/JoiningBonus/index.js"],"sourcesContent":["import React from \"react\";\n\nconst CardLayout = ({ children, style, className }) => {\n  return <div className={`ss-trade_all_card ${className}`} style={style}>{children}</div>;\n};\n\nexport default CardLayout;","import React from \"react\";\n\nconst Modal = ({ openModal, setOpenModal, modalTitle, children, modalRef }) => {\n  return (\n    <>\n      {openModal && (\n        <>\n          <dialog open ref={modalRef} className=\"custom_modal\">\n            <div className=\"title\">\n              <h2>{modalTitle}</h2>\n              <span onClick={() => setOpenModal(false)}>&times;</span>\n            </div>\n            {children}\n          </dialog>\n          <div className=\"backdrop_effect\"></div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Modal;","import React, { useEffect, useState } from \"react\";\nimport \"./LevelTeamFilter.scss\";\n\nconst LevelTeamFilter = ({ setAllTeamSearch, dataTeam }) => {\n  const [levelClick, setLevelClick] = useState(0);\n  const handleClick = (n) => {\n    if (levelClick === n) {\n      setLevelClick(0);\n    } else {\n      setLevelClick(n);\n    }\n  };\n\n  useEffect(() => {\n    const newTeam = dataTeam?.filter((team) => {\n      if (levelClick === 0) {\n        return team;\n      } else {\n        return team?.level == levelClick;\n      }\n    });\n    setAllTeamSearch(newTeam);\n  }, [dataTeam, levelClick]);\n\n  var levelCount = [];\n  for (var i = 0, l = dataTeam.length; i < l; i++)\n    if (levelCount.indexOf(dataTeam[i]?.level) === -1 && dataTeam[i]?.level !== \"\")\n    levelCount.push(dataTeam[i]?.level);\n    levelCount.sort((a,b)=>a-b)\n\n  return (\n    <>\n      <div className=\"search_by_button\">\n        {levelCount?.map((levelNo) => (\n          <button\n            className={`btn green ${levelClick == levelNo ? \"active-btn\" : \"\"}`}\n            onClick={() => handleClick(levelNo)}\n            key={levelNo}\n          >\n            level: {levelNo}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default LevelTeamFilter;\n","export const userRole = {\n    ADMIN: \"admin\",\n    USER: \"user\",\n  };\n  ","import React, { useState } from \"react\";\nimport Button from \"../components/Admin/Button/Button\"; // Ensure this path is correct\n\nconst RankButtons = ({\n  activeRank,\n  time,\n  handleRankClick,\n  handleRankTypeClick,\n}) => {\n  //\n  return (\n    <>\n      <div>\n        <Button\n          className=\"ss-trade_giftAllButton\"\n          type=\"button\"\n          onClick={() => {\n            // setActiveRank(\"current-rank\");\n            handleRankTypeClick(\"current-rank\");\n          }}\n          style={{\n            backgroundColor: time === \"current-rank\" ? \"blue\" : \"green\",\n            color: \"white\",\n            padding: \"10px\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            margin: \"5px\",\n          }}\n        >\n          Current Rank\n        </Button>\n        <Button\n          className=\"ss-trade_giftAllButton\"\n          type=\"button\"\n          onClick={() => {\n            // setActiveRank(\"next-rank\");\n            handleRankTypeClick(\"next-rank\");\n          }}\n          style={{\n            backgroundColor: time === \"next-rank\" ? \"blue\" : \"green\",\n            color: \"white\",\n            padding: \"10px\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            margin: \"5px\",\n          }}\n        >\n          Next Rank\n        </Button>\n      </div>\n      <div style={{ gap: \"5px\", display: \"flex\", flexWrap: \"wrap\" }}>\n        {[\"VIP1\", \"VIP2\", \"VIP3\", \"VIP4\", \"VIP5\", \"VIP6\", \"VIP7\", \"VIP8\"].map(\n          (rankItem) => (\n            <Button\n              key={rankItem}\n              type=\"button\"\n              onClick={() => handleRankClick(rankItem)}\n              style={{\n                backgroundColor: activeRank === rankItem ? \"blue\" : \"green\",\n                color: \"white\",\n                padding: \"10px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                margin: \"5px\",\n              }}\n            >\n              {rankItem}\n            </Button>\n          )\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default RankButtons;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n// import { useGetLoginUserQuery } from \"../../Services/userApi\";\nimport { CSVLink } from \"react-csv\";\nimport { DateRangePicker } from \"react-date-range\";\nimport Button from \"../Button/Button\";\nimport CardLayout from \"../CardLayout/CardLayout\";\nimport Modal from \"../Modal/Modal\";\n// import { addDays } from \"date-fns\";\nimport Input from \"../Input/Input\";\nimport LevelTeamFilter from \"../LevelTeamFilter/LevelTeamFilter\";\nimport { userRole } from \"../../../Config/UserRole\";\nimport RankButtons from \"../../../utils/RankButton\";\n\nconst SectionCommonTable = ({\n  wrapperClassName,\n  cardStyle,\n  sectionTableTitle,\n  table,\n  calculateCredit,\n  calculateDebit,\n  calculateContainer,\n  data,\n  toDay,\n  lastDay,\n  firstDay,\n  setFilterData,\n  addGiftAllUser,\n  setAllTeamSearch,\n  dataTeam,\n  sendAll,\n  adminBalance,\n  refetch,\n  modalRef,\n  Rank,\n  setRank,\n  setSearchById,\n  setRankType,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  // const { data: loginUserData } = useGetLoginUserQuery();\n  let loginUserData;\n  const [search, setSearch] = useState(\"\");\n  const [date, setDate] = useState([]);\n  const [dateState, setDateState] = useState([\n    {\n      startDate: new Date(),\n      endDate: null,\n      key: \"selection\",\n    },\n  ]);\n\n  const [activeRank, setActiveRank] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  const handleRankClick = (rankItem) => {\n    setActiveRank(rankItem);\n    setRank(rankItem);\n    // Assuming you want to store the rankItem in time\n  };\n  const handleRankTypeClick = (Item) => {\n    setTime(Item);\n    setRankType(Item);\n    // Assuming you want to store the rankItem in time\n  };\n\n  const RestButton = () => {\n    setTime(\"\");\n    setActiveRank(\"\");\n  };\n  useEffect(() => {\n    if (loginUserData?.data?.role === userRole.ADMIN) {\n      setDate(dateState);\n    }\n  }, [dateState]);\n\n  const searchFunction = () => {\n    if (data) {\n      const filterData = data?.filter((dt) => {\n        if (search === \"\") {\n          console.log(\"hello\", dt);\n          return dt;\n        } else if (dt?.userId?.toLowerCase()?.includes(search?.toLowerCase())) {\n          return dt;\n        }\n      });\n      setFilterData(filterData);\n    }\n  };\n\n  const dateFunction = () => {\n    const startDate = new Date(date[0]?.startDate).toDateString();\n    const startDateTimestam = Date.parse(startDate);\n    const endDate = new Date(date[0]?.endDate).toDateString();\n    const endDateTimestam = Date.parse(endDate);\n    // main function here\n    const filterResult = data?.filter(\n      (d) =>\n        Date.parse(\n          d?.joiningDate ||\n            d?.date ||\n            d?.package?.date ||\n            d?.packageInfo?.date ||\n            d?.incomeDate ||\n            d?.submission_date?.slice(0, 15)\n        ) <= endDateTimestam &&\n        Date.parse(\n          d?.joiningDate ||\n            d?.date ||\n            d?.package?.date ||\n            d?.packageInfo?.date ||\n            d?.incomeDate ||\n            d?.submission_date?.slice(0, 15)\n        ) >= startDateTimestam\n    );\n    setFilterData(filterResult);\n  };\n\n  const dateandSearchFunct = () => {\n    if (data) {\n      const startDate = new Date(date[0]?.startDate).toDateString();\n      const startDateTimestam = Date.parse(startDate);\n      const endDate = new Date(date[0]?.endDate).toDateString();\n      const endDateTimestam = Date.parse(endDate);\n      const filterData = data?.filter(\n        (d) =>\n          d?.userId === search &&\n          Date.parse(\n            d?.joiningDate ||\n              d?.date ||\n              d?.package?.date ||\n              d?.packageInfo?.date ||\n              d?.incomeDate ||\n              d?.submission_date?.slice(0, 15)\n          ) <= endDateTimestam &&\n          Date.parse(\n            d?.joiningDate ||\n              d?.date ||\n              d?.package?.date ||\n              d?.packageInfo?.date ||\n              d?.incomeDate ||\n              d?.submission_date?.slice(0, 15)\n          ) >= startDateTimestam\n      );\n      setFilterData(filterData);\n    }\n  };\n  console.log({ search });\n  if (Rank) {\n    setSearchById(search);\n  }\n  // range filter\n  useEffect(() => {\n    searchFunction();\n  }, [search]);\n\n  // download data\n  const getHeaders = () => {\n    if (data?.length > 0) {\n      return Object?.keys(data[0])?.map((key) => ({\n        label: key?.toUpperCase(),\n        key: key,\n      }));\n    }\n    return [];\n  };\n\n  const headers = getHeaders();\n\n  // calculation\n  const [totalAmount, setTotalAmount] = useState(0);\n  useEffect(() => {\n    if (data) {\n      const initialValue = 0;\n      const amountArr = data?.filter(\n        (d) =>\n          d?.amount ||\n          d?.package?.amount ||\n          d?.commissionAmount ||\n          d?.amountAfterCharge\n      );\n      const sum = amountArr?.reduce(\n        (accumulator, currentValue) =>\n          accumulator +\n          (currentValue?.amount ||\n            currentValue?.package?.amount ||\n            currentValue?.commissionAmount ||\n            currentValue?.amountAfterCharge),\n        initialValue\n      );\n      setTotalAmount(sum);\n    }\n  }, [data]);\n\n  return (\n    <div className={`ss-trade_sectiontable_wrapper ${wrapperClassName}`}>\n      {adminBalance && (\n        <CardLayout className=\"admin__balance__area\">\n          <div className=\"admin__balance\">\n            <h2 className=\"usdt_balance\">\n              USDT Balance:{\" \"}\n              {adminBalance?.usdtBalance?.data\n                ? parseFloat(adminBalance?.usdtBalance?.data).toFixed(4)\n                : 0}{\" \"}\n              USDT\n            </h2>\n            <h2>\n              BNB Balance:{\" \"}\n              {adminBalance?.bnbBalance?.data\n                ? parseFloat(adminBalance?.bnbBalance?.data).toFixed(4)\n                : 0}{\" \"}\n              BNB\n            </h2>\n          </div>\n        </CardLayout>\n      )}\n\n      <CardLayout style={cardStyle} className=\"ss-trade_sectiontable_card\">\n        <div className=\"ss-trade_sectiontable_title\">\n          <div className=\"ss-trade_sectiontable_title_container\">\n            <h2>{sectionTableTitle}</h2>\n\n            {Rank && (\n              <RankButtons\n                setRank={setRank}\n                setRankType={setRankType}\n                time={time}\n                activeRank={activeRank}\n                setActiveRank={setActiveRank}\n                setTime={setTime}\n                handleRankTypeClick={handleRankTypeClick}\n                handleRankClick={handleRankClick}\n              />\n            )}\n            {addGiftAllUser && (\n              <Button\n                className=\"ss-trade_giftAllButton\"\n                type=\"button\"\n                onClick={() => addGiftAllUser()}\n                // hidden={lastDay}\n                disabled={!(toDay === lastDay || toDay === firstDay)}\n                style={{\n                  display:\n                    toDay === lastDay || toDay === firstDay\n                      ? \"inline-block\"\n                      : \"none\",\n                }}\n              >\n                Gift Send To All\n              </Button>\n            )}\n          </div>\n          <div className=\"left\">\n            {sendAll && (\n              <Button onClick={sendAll} className=\"send-all\">\n                Send All\n              </Button>\n            )}\n\n            {loginUserData?.data?.role === userRole.ADMIN &&\n              totalAmount > 0 && (\n                <div className=\"searchbar_input\">₹{totalAmount}</div>\n              )}\n\n            {/* search filter */}\n            {loginUserData?.data?.role === userRole.ADMIN && data && (\n              <CSVLink\n                style={{ marginLeft: \"10px\" }}\n                className=\"downloadCSV_button\"\n                data={data}\n                headers={headers}\n                filename={\"sst.csv\"}\n              >\n                <Button className=\"downloadCSV_button\">Download Data</Button>\n              </CSVLink>\n            )}\n            {data && setFilterData && (\n              <div className=\"searchbar_input\">\n                <Input\n                  type=\"text\"\n                  name=\"search\"\n                  className=\"spacial_search_input\"\n                  placeholder=\"Search user id\"\n                  onChange={(e) => setSearch(e.target.value)}\n                  value={search}\n                />\n              </div>\n            )}\n\n            {loginUserData?.data?.role === userRole.ADMIN && (\n              <Button\n                className=\"filter_button\"\n                onClick={() => setShowModal(true)}\n              >\n                Filter\n              </Button>\n            )}\n            {Rank && (\n              <Button\n                className=\"filter_button\"\n                onClick={() => {\n                  setDate([\n                    {\n                      startDate: new Date(),\n                      endDate: null,\n                      key: \"selection\",\n                    },\n                  ]);\n                  setSearch(\"\");\n                  setFilterData([]);\n                  setRank(\"\");\n                  setSearchById(\"\");\n                  setRankType(\"\");\n                  RestButton();\n                }}\n              >\n                Reset\n              </Button>\n            )}\n          </div>\n        </div>\n        {dataTeam && (\n          <LevelTeamFilter\n            setAllTeamSearch={setAllTeamSearch}\n            dataTeam={dataTeam}\n          />\n        )}\n        <div className=\"ss-trade_sectiontable_table\">{table}</div>\n        {calculateContainer && (\n          <div className=\"ss-trade_sectiontable_calculate\">\n            {calculateCredit && (\n              <h2 className=\"credit_balance\">{calculateCredit}</h2>\n            )}\n            {calculateDebit && (\n              <h2 className=\"debit_balance\">{calculateDebit}</h2>\n            )}\n          </div>\n        )}\n      </CardLayout>\n\n      <Modal\n        modalRef={modalRef}\n        setOpenModal={setShowModal}\n        openModal={showModal}\n      >\n        {\" \"}\n        <DateRangePicker\n          onChange={(item) => setDateState([item.selection])}\n          showSelectionPreview={true}\n          moveRangeOnFirstSelection={false}\n          months={2}\n          ranges={dateState}\n          direction=\"horizontal\"\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default SectionCommonTable;\n","import React from \"react\";\nimport Modal from \"../Admin/Modal/Modal\";\n\n\nconst TransactionModal = ({\n  openModal,\n  setOpenModal,\n  modalRef,\n  modalTitle,\n  objValue,\n}) => {\n  const keyValueArray = Object.entries(objValue).map(([key, value]) => ({\n    key,\n    value,\n  }));\n  return (\n    <Modal\n      openModal={openModal}\n      setOpenModal={setOpenModal}\n      modalTitle={modalTitle}\n      modalRef={modalRef}\n    >\n      <div className=\"ss-trade_commol_modal_field\">\n        <div\n          className=\"transaction_details\"\n          style={{ textAlign: \"left\", marginTop: \"20px\" }}\n        >\n          {keyValueArray.map((d, i) => (\n            <p key={i + 10} className=\"trans__row\">\n              <strong style={{ textTransform: \"capitalize\" }}>{d.key.replace(/([a-z])([A-Z])/g, \"$1 $2\")}: </strong>\n              <span> {d.value}</span>\n            </p>\n          ))}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default TransactionModal;","import React, { useRef, useState } from \"react\";\nimport Loading from \"../../../../components/Admin/Loading/Loading\";\nimport SectionCommonTable from \"../../../../components/Admin/SectionCommonTable/SectionCommonTable\";\nimport TransactionModal from \"../../../../components/TransactionModal/TransactionModal\";\nimport { useClickOutside } from \"../../../../hooks/useClickOutside\";\nimport { useGetJoiningBonusHistoryQuery } from \"../../../../services/Admin.Earning\";\nimport JoiningBonusTable from \"../../../User.Containers/User.WalletContainer/table/JoiningBonusTable\";\n\nconst JoiningBonus = () => {\n  const { data, isLoading } = useGetJoiningBonusHistoryQuery();\n\n  const [openModal, setOpenModal] = useState(false);\n  const modalRef = useRef(null);\n  useClickOutside(modalRef, () => setOpenModal(false));\n  const [values, setValues] = useState({});\n  const showDetails = (body) => {\n    setValues(body);\n    setOpenModal(true);\n  };\n  const modalData = {\n    userid: values?.userId,\n    fullName: values?.fullName,\n    package: values?.package,\n    percentage: values?.commissionPercentagePerDay + \"%\",\n    amount: \"₹\" + Number(values?.commissionAmount).toFixed(4),\n    totalAmount: \"₹\" + Number(values?.totalCommissionAmount).toFixed(4),\n    date: values?.incomeDate,\n    time: values?.incomeTime,\n    status: \"success\",\n  };\n\n  const [filterData, setFilterData] = useState([]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <div className=\"UserEarning_wallet_page_wrapper\">\n        <SectionCommonTable\n          wrapperClassName=\"roi_table\"\n          cardStyle={{ backgroundColor: \"#fff\" }}\n          sectionTableTitle={` Joining Bonus (${\n            filterData?.length > 0\n              ? filterData?.length\n              : data?.data?.length ?? 0\n          })`}\n          data={data?.data}\n          setFilterData={setFilterData}\n          table={\n            <JoiningBonusTable\n              data={filterData?.length > 0 ? filterData : data?.data}\n              showDetails={showDetails}\n            />\n          }\n        />\n      </div>\n      <TransactionModal\n        openModal={openModal}\n        setOpenModal={setOpenModal}\n        modalRef={modalRef}\n        modalTitle=\"Details\"\n        objValue={modalData}\n      />\n    </>\n  );\n};\n\nexport default JoiningBonus;\n"],"names":["_ref","children","style","className","_jsx","concat","openModal","setOpenModal","modalTitle","modalRef","_Fragment","_jsxs","open","ref","onClick","setAllTeamSearch","dataTeam","levelClick","setLevelClick","useState","useEffect","newTeam","filter","team","level","levelCount","i","l","length","_dataTeam$i","_dataTeam$i2","_dataTeam$i3","indexOf","push","sort","a","b","map","levelNo","n","userRole","activeRank","time","handleRankClick","handleRankTypeClick","Button","type","backgroundColor","color","padding","border","borderRadius","margin","gap","display","flexWrap","rankItem","_adminBalance$usdtBal","_adminBalance$usdtBal2","_adminBalance$bnbBala","_adminBalance$bnbBala2","wrapperClassName","cardStyle","sectionTableTitle","table","calculateCredit","calculateDebit","calculateContainer","data","toDay","lastDay","firstDay","setFilterData","addGiftAllUser","sendAll","adminBalance","refetch","Rank","setRank","setSearchById","setRankType","showModal","setShowModal","search","setSearch","date","setDate","dateState","setDateState","startDate","Date","endDate","key","setActiveRank","setTime","console","log","searchFunction","filterData","dt","_dt$userId","_dt$userId$toLowerCas","userId","toLowerCase","includes","headers","getHeaders","_Object$keys","Object","keys","label","toUpperCase","totalAmount","setTotalAmount","initialValue","amountArr","d","_d$package5","amount","package","commissionAmount","amountAfterCharge","sum","reduce","accumulator","currentValue","_currentValue$package","CardLayout","usdtBalance","parseFloat","toFixed","bnbBalance","RankButtons","Item","disabled","CSVLink","marginLeft","filename","Input","name","placeholder","onChange","e","target","value","LevelTeamFilter","Modal","DateRangePicker","item","selection","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","objValue","keyValueArray","entries","_ref2","textAlign","marginTop","textTransform","replace","JoiningBonus","_data$data$length","_data$data","isLoading","useGetJoiningBonusHistoryQuery","useRef","useClickOutside","values","setValues","modalData","userid","fullName","percentage","commissionPercentagePerDay","Number","totalCommissionAmount","incomeDate","incomeTime","status","Loading","SectionCommonTable","JoiningBonusTable","showDetails","body","TransactionModal"],"sourceRoot":""}