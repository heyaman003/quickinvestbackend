{"version":3,"file":"static/js/859.bbfdcecb.chunk.js","mappings":"qKAEA,MAIA,EAJmBA,IAAqC,IAApC,SAAEC,EAAQ,MAAEC,EAAK,UAAEC,GAAWH,EAChD,OAAOI,EAAAA,EAAAA,KAAA,OAAKD,UAAS,qBAAAE,OAAuBF,GAAaD,MAAOA,EAAMD,SAAEA,GAAe,C,gICIzF,MAuFA,EAvFqBK,KACnB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,GACRC,OAAQ,MAGHC,GAAgBL,KAAMM,EAAY,MAAEC,EAAK,UAAEC,KAChDC,EAAAA,EAAAA,OAEFC,EAAAA,EAAAA,YAAU,KAOA,IAADC,EANS,OAAZL,QAAY,IAAZA,GAAAA,EAAcM,UAChBC,EAAAA,EAAAA,GAAyB,OAAZP,QAAY,IAAZA,OAAY,EAAZA,EAAcM,QAAS,WACpCX,EAAQ,CACNE,OAAQ,GACRC,OAAQ,OAGVS,EAAAA,EAAAA,GAAkB,OAALN,QAAK,IAALA,GAAW,QAANI,EAALJ,EAAOP,YAAI,IAAAW,OAAN,EAALA,EAAaC,QAAS,QACrC,GACC,CAACL,EAAOD,IAYX,OACET,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sCAAqCF,UAClDoB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTpB,MAAO,CAAEqB,gBAAiB,QAC1BpB,UAAU,oCAAmCF,SAAA,EAE7CG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,yBAAwBF,UACrCG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,qBAGNG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sCAAqCF,UAClDoB,EAAAA,EAAAA,MAAA,QAAMG,SArBOC,UACnBC,EAAEC,iBACFC,QAAQC,IAAI,CAAEtB,SACTA,EAAKG,aAGFE,EAAaL,IAFnBa,EAAAA,EAAAA,GAAa,yBAA0B,QAGzC,EAcmCnB,SAAA,EAC3BoB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,aAAYF,SAAA,EACzBG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAASF,UACtBG,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,MAAM,UACNC,KAAK,OACLC,KAAK,SACLC,GAAG,SACHC,MAAO5B,EAAKG,OACZ0B,YAAY,qBACZC,SAAWX,GAAMlB,EAAQ,IAAKD,EAAMG,OAAQgB,EAAEY,OAAOH,QACrDhC,UAAU,cACVoC,gBAAgB,YAGpBlB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,UAASF,SAAA,EACtBG,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,SAAQvC,SAAC,YACxBG,EAAAA,EAAAA,KAAA,SACE6B,KAAK,SACLC,GAAG,kBACHE,YAAY,YACZJ,KAAK,SACLS,IAAI,IACJJ,SAAWX,GAAMlB,EAAQ,IAAKD,EAAMI,OAAQe,EAAEY,OAAOH,QACrDO,YAAY,EACZvC,UAAU,cACVoC,gBAAgB,iBAKtBnC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLX,KAAK,SACL7B,UAAU,aACVyC,WAAU7B,EAAyBd,SAElCc,EAAY,aAAe,2BAKhC,C","sources":["components/Admin/CardLayout/CardLayout.js","containers/Admin.Container/admin.MakeRechagre/index.js"],"sourcesContent":["import React from \"react\";\n\nconst CardLayout = ({ children, style, className }) => {\n  return <div className={`ss-trade_all_card ${className}`} style={style}>{children}</div>;\n};\n\nexport default CardLayout;","import React, { useEffect, useState } from \"react\";\nimport Button from \"../../../components/Admin/Button/Button\";\nimport CardLayout from \"../../../components/Admin/CardLayout/CardLayout\";\nimport Input from \"../../../components/Admin/Input/Input\";\nimport { Notification } from \"../../../components/ToastNotification\";\nimport { useMakeRechargeMutation } from \"../../../services/AdminRecharge\";\n\nconst MakeRecharge = () => {\n  const [data, setData] = useState({\n    userId: \"\",\n    amount: \"\",\n  });\n  //  make Recharge\n  const [makeRecharge, { data: rechargeData, error, isLoading }] =\n    useMakeRechargeMutation();\n\n  useEffect(() => {\n    if (rechargeData?.message) {\n      Notification(rechargeData?.message, \"success\");\n      setData({\n        userId: \"\",\n        amount: \"\",\n      });\n    } else {\n      Notification(error?.data?.message, \"error\");\n    }\n  }, [error, rechargeData]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log({ data });\n    if (!data.userId) {\n      Notification(\"All field are required\", \"error\");\n    } else {\n      await makeRecharge(data);\n    }\n  };\n\n  return (\n    <div className=\"ss-trade_supportticket_page_wrapper\">\n      <CardLayout\n        style={{ backgroundColor: \"#fff\" }}\n        className=\"ss-trade_supporttickett_form_card\"\n      >\n        <div className=\"ss-trade_section_title\">\n          <h2>Make Recharge</h2>\n          {/* <p>Whenever, </p> */}\n        </div>\n        <div className=\"ss-trade_supportticket_page_content\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form_group\">\n              <div className=\"purpose\">\n                <Input\n                  label=\"User Id\"\n                  type=\"text\"\n                  name=\"userId\"\n                  id=\"userId\"\n                  value={data.userId}\n                  placeholder=\"Enter your User Id\"\n                  onChange={(e) => setData({ ...data, userId: e.target.value })}\n                  className=\"input_field\"\n                  inputGroupClass=\"left\"\n                />\n              </div>\n              <div className=\"purpose\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input\n                  name=\"amount\"\n                  id=\"recharge_amount\"\n                  placeholder=\"5K to 10L\"\n                  type=\"number\"\n                  min=\"0\"\n                  onChange={(e) => setData({ ...data, amount: e.target.value })}\n                  isRequired={true}\n                  className=\"input_field\"\n                  inputGroupClass=\"right\"\n                />\n              </div>\n            </div>\n\n            <Button\n              type=\"submit\"\n              className=\"submit_btn\"\n              disabled={isLoading ? true : false}\n            >\n              {isLoading ? \"Loading...\" : \"Make Recharge\"}\n            </Button>\n          </form>\n        </div>\n      </CardLayout>\n    </div>\n  );\n};\n\nexport default MakeRecharge;\n"],"names":["_ref","children","style","className","_jsx","concat","MakeRecharge","data","setData","useState","userId","amount","makeRecharge","rechargeData","error","isLoading","useMakeRechargeMutation","useEffect","_error$data","message","Notification","_jsxs","CardLayout","backgroundColor","onSubmit","async","e","preventDefault","console","log","Input","label","type","name","id","value","placeholder","onChange","target","inputGroupClass","htmlFor","min","isRequired","Button","disabled"],"sourceRoot":""}